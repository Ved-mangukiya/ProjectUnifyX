class PlotExporter {
    constructor() {
        this.jsPDF = window.jspdf?.jsPDF;
    }

    // Professional PDF export with charts and data
    exportToPDF(state, canvas) {
        if (!this.jsPDF) {
            alert('PDF export not available');
            return;
        }
        
        const doc = new this.jsPDF('portrait', 'mm', 'a4');
        const results = state.results;
        
        // Header with branding
        doc.setFillColor(99, 102, 241);
        doc.rect(0, 0, 210, 35, 'F');
        doc.setTextColor(255, 255, 255);
        doc.setFontSize(20);
        doc.text('PlotMaster Pro Survey Report', 15, 20);
        doc.setFontSize(12);
        doc.text(`Generated: ${new Date().toLocaleDateString()}`, 15, 30);
        
        // Plot visualization
        const imgData = canvas.toDataURL('image/png', 1.0);
        doc.addImage(imgData, 'PNG', 15, 45, 180, 120);
        
        // Results table
        let yPos = 175;
        doc.setTextColor(0, 0, 0);
        doc.setFontSize(14);
        doc.text('Calculation Results', 15, yPos);
        
        yPos += 10;
        doc.setFontSize(11);
        doc.text(`Area: ${results.area.toFixed(4)} ${results.unit}²`, 15, yPos);
        yPos += 8;
        doc.text(`Perimeter: ${results.perimeter.toFixed(4)} ${results.unit}`, 15, yPos);
        yPos += 8;
        doc.text(`Vertices: ${state.plotData.coordinates.length}`, 15, yPos);
        
        // Side lengths table
        yPos += 15;
        doc.text('Side Lengths:', 15, yPos);
        yPos += 8;
        state.plotData.sideLengths.forEach((length, idx) => {
            doc.text(`Side ${idx + 1}: ${length.toFixed(2)} ${results.unit}`, 15, yPos);
            yPos += 6;
        });
        
        // Footer
        doc.setFontSize(8);
        doc.setTextColor(128, 128, 128);
        doc.text('Generated by PlotMaster Pro | Professional Survey Tool', 15, 285);
        
        doc.save('plotmaster_survey_report.pdf');
    }

    // Export to Excel/CSV format
    exportToExcel(state) {
        const results = state.results;
        let csvContent = "PlotMaster Pro Survey Data\n";
        csvContent += `Date,${new Date().toLocaleDateString()}\n\n`;
        
        csvContent += "Property,Value\n";
        csvContent += `Area,${results.area.toFixed(4)} ${results.unit}²\n`;
        csvContent += `Perimeter,${results.perimeter.toFixed(4)} ${results.unit}\n`;
        csvContent += `Vertices,${state.plotData.coordinates.length}\n\n`;
        
        csvContent += "Side Lengths\n";
        csvContent += "Side,Length\n";
        state.plotData.sideLengths.forEach((length, idx) => {
            csvContent += `Side ${idx + 1},${length}\n`;
        });
        
        this.downloadCSV(csvContent, 'plotmaster_data.csv');
    }

    exportToImage(canvas) {
        const link = document.createElement('a');
        link.download = 'plotmaster_plot.png';
        link.href = canvas.toDataURL('image/png', 1.0);
        link.click();
    }

    downloadCSV(content, filename) {
        const blob = new Blob([content], { type: 'text/csv' });
        const url = URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.href = url;
        link.download = filename;
        link.click();
        URL.revokeObjectURL(url);
    }
}
